{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "VPC Network",
  "Parameters": {
    "EnvironmentName": {
      "ConstraintDescription": "can contain only alphanumeric characters.",
      "Description": "EnvironmentName",
      "MaxLength": "32",
      "MinLength": "1",
      "Type": "String",
      "Default" : "demo"
    },
    "VPCRange": {
      "Description": "CIDR address for the VPC to be created.",
      "Type": "String",
      "Default" : "172.18.0.0/16"
    },
    "PublicSubnet1Range": {
      "Description": "Address range for a public subnet to be created in the VPC.",
      "Type": "String",
      "Default" : "172.18.0.0/24"
    },
    "PublicSubnet2Range": {
      "Description": "Address range for a public subnet to be created in the VPC.",
      "Type": "String",
      "Default" : "172.18.5.0/24"
    }
  },
  "Resources": {
    "ExternalSshAccessSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "External SSH Access",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  "-ExternalSshAccessSG"
                ]
              ]
            }
          }
        ]
      }
    },
    "VPCSGId": {
      "Properties": {
        "GroupDescription": "Default Security Group for VPC",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  "-VPCSGId"
                ]
              ]
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "EnvironmentName"
            }
          }
        ]
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "gatewayAttachment1": {
      "DependsOn": "igwMainGateway",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "igwMainGateway"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "igwMainGateway": {
      "DependsOn": "VPC",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  "-InternetGateway"
                ]
              ]
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "EnvironmentName"
            }
          }
        ]
      },
      "Type": "AWS::EC2::InternetGateway"
    },
    "routePublic2Gateway": {
      "DependsOn": "gatewayAttachment1",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "igwMainGateway"
        },
        "RouteTableId": {
          "Ref": "rtbMainPublic"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "rtbMainPublic": {
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  "-PublicRouteTable"
                ]
              ]
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "EnvironmentName"
            }
          }
        ]
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "PublicSubnet1": {
      "DependsOn": "VPC",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnet1Range"
        },
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  "-PublicSubnet1"
                ]
              ]
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "EnvironmentName"
            }
          }
        ]
      },
      "Type": "AWS::EC2::Subnet"
    },
    "PublicSubnet2": {
      "DependsOn": "VPC",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnet2Range"
        },
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  "-PublicSubnet2"
                ]
              ]
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "EnvironmentName"
            }
          }
        ]
      },
      "Type": "AWS::EC2::Subnet"
    },
    "subnetroute1": {
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbMainPublic"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "subnetroute2": {
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbMainPublic"
        },
        "SubnetId": {
          "Ref": "PublicSubnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "VPC": {
      "Properties": {
        "CidrBlock": {
          "Ref": "VPCRange"
        },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "EnvironmentName"
                  },
                  "-VPC"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::EC2::VPC"
    },
    "EIPWordpress": {
      "Properties": {
        "Domain": "vpc"
      },
      "Type": "AWS::EC2::EIP"
    }
  },
  "Outputs": {
    "EnvironmentName": {
      "Description": "EnvironmentName",
      "Value": {
        "Ref": "EnvironmentName"
      }
    },
    "ExternalSshAccessSG": {
      "Description": "External SSH Access",
      "Value": {
        "Fn::GetAtt": [
          "ExternalSshAccessSG",
          "GroupId"
        ]
      }
    },
    "VPCSGId": {
      "Description": "Security Group for the VPC",
      "Value": {
        "Fn::GetAtt": [
          "VPCSGId",
          "GroupId"
        ]
      }
    },
    "PublicSubnet1": {
      "Description": "Security Group for the VPC",
      "Value": {
        "Ref": "PublicSubnet1"
      }
    },
    "VPC": {
      "Description": "VPC ID",
      "Value": {
        "Ref": "VPC"
      }
    },
    "EIP": {
      "Description": "EIP ID",
      "Value": {
        "Ref": "EIPWordpress"
      }
    }
  }
}
